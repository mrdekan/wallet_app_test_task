// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wallet.Data;

#nullable disable

namespace Wallet.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20241105190542_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wallet.Models.Entities.TransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AuthorizedUser")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsPending")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50.75m,
                            Date = new DateTimeOffset(new DateTime(2024, 11, 4, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9604), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Home furniture purchase",
                            Icon = "icon1",
                            IsPending = false,
                            Title = "IKEA",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 20.00m,
                            AuthorizedUser = "Alice",
                            Date = new DateTimeOffset(new DateTime(2024, 11, 3, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9664), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Grocery shopping",
                            Icon = "icon2",
                            IsPending = true,
                            Title = "Target",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 120.00m,
                            AuthorizedUser = "Bob",
                            Date = new DateTimeOffset(new DateTime(2024, 11, 2, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9668), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Monthly subscription",
                            Icon = "icon3",
                            IsPending = false,
                            Title = "Spotify",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Amount = 35.00m,
                            Date = new DateTimeOffset(new DateTime(2024, 11, 1, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9672), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Online order",
                            Icon = "icon4",
                            IsPending = false,
                            Title = "Amazon",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 75.50m,
                            Date = new DateTimeOffset(new DateTime(2024, 10, 31, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9676), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Shopping for home essentials",
                            Icon = "icon5",
                            IsPending = false,
                            Title = "Walmart",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            Amount = 15.00m,
                            AuthorizedUser = "Charlie",
                            Date = new DateTimeOffset(new DateTime(2024, 10, 30, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9680), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Ride to office",
                            Icon = "icon6",
                            IsPending = false,
                            Title = "Uber",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Amount = 45.25m,
                            Date = new DateTimeOffset(new DateTime(2024, 10, 29, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9684), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "App purchase",
                            Icon = "icon7",
                            IsPending = false,
                            Title = "Apple",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Amount = 100.00m,
                            AuthorizedUser = "David",
                            Date = new DateTimeOffset(new DateTime(2024, 10, 28, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9687), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Annual subscription",
                            Icon = "icon8",
                            IsPending = false,
                            Title = "Netflix",
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Amount = 60.00m,
                            Date = new DateTimeOffset(new DateTime(2024, 10, 28, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9691), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Coffee with friends",
                            Icon = "icon9",
                            IsPending = true,
                            Title = "Starbucks",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            Amount = 250.00m,
                            AuthorizedUser = "Emma",
                            Date = new DateTimeOffset(new DateTime(2024, 10, 28, 21, 5, 42, 459, DateTimeKind.Unspecified).AddTicks(9694), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "New headphones",
                            Icon = "icon10",
                            IsPending = false,
                            Title = "Best Buy",
                            Type = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
